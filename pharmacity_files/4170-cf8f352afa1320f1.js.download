(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4170],{57002:function(){},96937:function(e,t,r){"use strict";r.d(t,{G3:function(){return getLanguage}});let a="pmc-vi",o={[a]:"vi","pmc-en":"en"},getLanguage=e=>e?o[e]:o[a]},57556:function(e,t,r){"use strict";r.d(t,{cn:function(){return cn}});var a=r(33501),o=r(82701);function cn(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return(0,o.m)((0,a.W)(t))}},35257:function(e,t,r){"use strict";r.d(t,{w:function(){return sendRequest},z:function(){return sendRequestOld}});var a=r(88452),o=r.n(a),s=r(27978),n=r(64570),c=r(96937);let{revalidateTime:u}=s.environments,i={UNAUTHORIZED:401,FORBIDDEN:403},m={url:"",method:"GET",transformRequest:e=>e,responseType:"json",qsStringifyOptions:void 0},l={next:{revalidate:Number(u)}},convertResponse=async(e,t)=>{switch(t){case"json":return await e.json();case"text":return await e.text();case"blob":return await e.blob();default:return e}},createRequest=e=>{let{refreshToken:t,getToken:r=()=>"",onRetryFailed:a=()=>void 0,shouldRefreshToken:s=()=>!1,minTokenRefreshDuration:u=200}=e,i=!1,d=[],f=Date.now(),addSubscriber=e=>{d.push(e)},executeAndClearSubscriber=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";d.forEach(t=>t(e)),d=[]},handleRefreshToken=async()=>{try{let e=await t();if(null==e?void 0:e.token)return executeAndClearSubscriber(e.token),f=Date.now(),i=!1,e}catch(e){throw console.log(e instanceof Error?e.message:"Failed to refresh token"),Error(e instanceof Error?e.message:"Failed to refresh token")}},fetchData=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m,{url:t,method:d,params:h,data:p,headers:R,transformRequest:q,responseType:g="json",isRetry:T,qsStringifyOptions:D,fetchOptions:k=l,isAuth:G=!0}=e,v=t,E=r(),w={...E&&G&&{Authorization:r()},...R,...k.headers||{}};w["Accept-Language"]||(w["Accept-Language"]=(0,c.G3)((0,n.getCookie)("NEXT_LOCALE")));let S={...k,method:d,headers:w};"GET"===d&&h?v="".concat(v,"?").concat(o().stringify(h,D)):S.body=(null==q?void 0:q(p))||p;try{let t=await fetch(v,S);if(t.ok){let e=await convertResponse(t,g);return{responseData:e,success:!0}}if(T)throw a(),Error("Not permission");if(!s(t)){let e=await convertResponse(t,g);throw e}let o=Date.now()-f;if(!i){if(o<u)return fetchData({...e,headers:{...e.headers,Authorization:r()},isRetry:!0});i=!0,handleRefreshToken()}let n=new Promise(t=>{addSubscriber(r=>{t(fetchData({...e,headers:{...e.headers,Authorization:r},isRetry:!0}))})});return n}catch(r){let e={};return r instanceof Error?e.message=r.message:e=r,console.log("API error",t),{success:!1,errorMessage:null==e?void 0:e.message,metadata:null==e?void 0:e.metadata,responseData:{}}}};return{fetchData}};var d=r(88899),f=r(47893);let h=f.d.userRefreshToken.url,getRefreshTokenUser=()=>"Bearer ".concat((0,d.YV)()),onRetryFailed=()=>{(0,d.B$)(),window.location.replace("/")},refreshToken=async()=>{try{let r=await fetch(h,{method:"GET",headers:{"Content-Type":"application/json",Authorization:getRefreshTokenUser()}});if(r.ok){var e,t;let a=await r.json();return(0,d.o4)(null==a?void 0:null===(e=a.data)||void 0===e?void 0:e.access_token),{token:"Bearer ".concat(null==a?void 0:null===(t=a.data)||void 0===t?void 0:t.access_token)}}if(r.status===i.UNAUTHORIZED)throw onRetryFailed(),Error("Refresh token is expired");throw Error("Failed to refresh token")}catch(e){throw Error(e instanceof Error?e.message:"Failed to refresh token")}},{fetchData:p}=createRequest({refreshToken,getToken:()=>{let e=(0,d.LP)();return e?"Bearer ".concat(e):""},onRetryFailed,shouldRefreshToken:e=>e.status===i.UNAUTHORIZED||e.status===i.FORBIDDEN,minTokenRefreshDuration:200}),generateUrl=(e,t)=>{let r=e;return Object.keys(t).forEach(e=>{r=r.replaceAll(":".concat(e),t[e])}),r},sendRequest=e=>{let{config:t,payload:r,paramUrl:a,qsStringifyOptions:o,fetchOptions:s}=e,n=t||{},c=a?generateUrl(t.url,a):t.url;return"GET"===t.method?n.params=r:n.data=r,p({...n,url:c,qsStringifyOptions:o,fetchOptions:s})},sendRequestOld_getRefreshTokenUser=()=>"Bearer ".concat((0,d.im)()),sendRequestOld_onRetryFailed=()=>{(0,d.B$)(),window.location.replace("/")},sendRequestOld_refreshToken=async()=>{try{let r=await fetch("",{method:"GET",headers:{"Content-Type":"application/json",Authorization:sendRequestOld_getRefreshTokenUser()}});if(r.ok){var e,t;let a=await r.json();return(0,d.o4)(null==a?void 0:null===(e=a.data)||void 0===e?void 0:e.access_token),{token:"Bearer ".concat(null==a?void 0:null===(t=a.data)||void 0===t?void 0:t.access_token)}}if(r.status===i.UNAUTHORIZED)throw sendRequestOld_onRetryFailed(),Error("Refresh token is expired");throw Error("Failed to refresh token")}catch(e){throw Error(e instanceof Error?e.message:"Failed to refresh token")}},{fetchData:R}=createRequest({refreshToken:sendRequestOld_refreshToken,getToken:()=>{let e=(0,d.J6)();return e?"Bearer ".concat(e):""},onRetryFailed:sendRequestOld_onRetryFailed,shouldRefreshToken:()=>!1,minTokenRefreshDuration:200}),sendRequestOld_generateUrl=(e,t)=>{let r=e;return Object.keys(t).forEach(e=>{r=r.replaceAll(":".concat(e),t[e])}),r},sendRequestOld=e=>{let{config:t,payload:r,paramUrl:a,qsStringifyOptions:o,fetchOptions:s}=e,n=t||{},c=a?sendRequestOld_generateUrl(t.url,a):t.url;return"GET"===t.method?n.params=r:n.data=r,R({...n,url:c,qsStringifyOptions:o,fetchOptions:s})}},47893:function(e,t,r){"use strict";r.d(t,{d:function(){return V}});var a=r(27978);let transformRequestBase=e=>e,transformRequestDefault=e=>JSON.stringify(e),o={"Content-Type":"application/json"},{apiGateway:s}=a.environments,{apiGateway:n}=a.environments,{apiGateway:c}=a.environments,u="pmc-ecm-product",i={productCollectionWithCode:{url:"".concat(c).concat(u,"/api/public/collection/active-children/with-code/:code"),method:"GET",headers:o,transformRequest:transformRequestDefault},productCollectionWithSlug:{url:"".concat(c).concat(u,"/api/public/collection/active-children/with-slug/:slug"),method:"GET",headers:o,transformRequest:transformRequestDefault},getGroupCollection:{url:"".concat(c).concat(u,"/api/public/collection/active-children/with-group-code/:group_code"),method:"GET",headers:o,transformRequest:transformRequestDefault},productSearch:{url:"".concat(c,"pmc-ecm-product/api/public/search/index"),method:"GET",headers:o,transformRequest:transformRequestDefault},productSearchSuggest:{url:"".concat(c,"pmc-ecm-product/api/public/search/suggest"),method:"GET",headers:o,transformRequest:transformRequestDefault},productTrendingKeyword:{url:"".concat(c,"/api/v1/trending-keyword"),method:"GET",headers:o,transformRequest:transformRequestDefault},productDetail:{url:"".concat(c).concat(u,"/api/public/product/with-slug/:slug"),method:"GET",headers:o,transformRequest:transformRequestDefault},productViewTracking:{url:"".concat(c).concat(u,"/api/public/product/tracking/view/with-sku/:sku"),method:"GET",headers:o,transformRequest:transformRequestDefault}},{apiGateway:m}=a.environments,{apiGateway:l}=a.environments,d="pmc-ecm-auth-api",f={userRefreshToken:{url:"".concat(l).concat(d,"/api/authenticator/refresh-token"),method:"GET",headers:o,transformRequest:transformRequestDefault},userLogin:{url:"".concat(l).concat(d,"/api/authenticator/customer/sign-in"),method:"POST",headers:o,transformRequest:transformRequestDefault},userGetMe:{url:"".concat(l).concat(d,"/api/authentication/account/me"),method:"GET",headers:o,transformRequest:transformRequestDefault},userLoginSocial:{url:"".concat(l).concat(d,"/api/authenticator/customer/sign-in/:source"),method:"POST",headers:o,transformRequest:transformRequestDefault},registerSocial:{url:"".concat(l).concat(d,"/api/authenticator/customer/sign-in/:source/submit-otp"),method:"POST",headers:o,transformRequest:transformRequestDefault},checkUserExists:{url:"".concat(l).concat(d,"/api/authenticator/customer/verify-exists"),method:"POST",headers:o,transformRequest:transformRequestDefault},getOTPRegister:{url:"".concat(l).concat(d,"/api/authenticator/customer/register/otp"),method:"POST",headers:o,transformRequest:transformRequestDefault},getOTPLogin:{url:"".concat(l).concat(d,"/api/authenticator/customer/sign-in/otp"),method:"POST",headers:o,transformRequest:transformRequestDefault},getOTPSocial:{url:"".concat(l).concat(d,"/api/authenticator/customer/sign-in/:source/send-otp"),method:"POST",headers:o,transformRequest:transformRequestDefault},getOTPForgotPassword:{url:"".concat(l).concat(d,"/api/authenticator/customer/forgot-password/otp"),method:"POST",headers:o,transformRequest:transformRequestDefault},updatePassword:{url:"".concat(l).concat(d,"/api/authenticator/customer/update-password"),method:"PUT",headers:o,transformRequest:transformRequestDefault},userUpdateAddress:{url:"".concat(l,"customers/update/address"),method:"PUT",headers:o,transformRequest:transformRequestDefault},updateUserInfo:{url:"".concat(l,"customers/auth/me"),method:"PUT",headers:o,transformRequest:transformRequestDefault},getExtraCareInfo:{url:"".concat(l,"erp/extracare-info"),method:"GET",headers:o,transformRequest:transformRequestDefault},uploadAvatar:{url:"".concat(l,"customers/auth/me/avatar"),method:"POST",transformRequest:transformRequestBase}},{apiGateway:h}=a.environments,{apiGateway:p}=a.environments,{apiGateway:R}=a.environments,q="pmc-ecm-cart",g={cartDetail:{url:"".concat(R).concat(q,"/api/cart/detail"),method:"GET",headers:o,transformRequest:transformRequestDefault},cartSummary:{url:"".concat(R).concat(q,"/api/cart/summary"),method:"GET",headers:o,transformRequest:transformRequestDefault},cartAddProduct:{url:"".concat(R).concat(q,"/api/cart/product/:cartId"),method:"POST",headers:o,transformRequest:transformRequestDefault},cartUpdateProduct:{url:"".concat(R).concat(q,"/api/cart/product/:cartId"),method:"PUT",headers:o,transformRequest:transformRequestDefault},cartClear:{url:"".concat(R).concat(q,"/api/cart/product/:cartId"),method:"DELETE",headers:o,transformRequest:transformRequestDefault},cartEstimate:{url:"".concat(R).concat(q,"/api/cart/estimate"),method:"POST",headers:o,transformRequest:transformRequestDefault},cartDeleteMultiItem:{url:"".concat(R).concat(q,"/api/cart/product/:cartId/delete"),method:"POST",headers:o,transformRequest:transformRequestDefault},cartUpdate:{url:"".concat(R).concat(q,"/api/cart/:cartId"),method:"PATCH",headers:o,transformRequest:transformRequestDefault},cartCheckout:{url:"".concat(R).concat(q,"/api/cart/checkout"),method:"POST",headers:o,transformRequest:transformRequestDefault}},{apiGateway:T}=a.environments,D="pmc-ecm-customer",k={customerGetVoucherList:{url:"".concat(T,"customers/vouchers"),method:"GET",headers:o,transformRequest:transformRequestDefault},customerGetUsedVoucherList:{url:"".concat(T,"customers/vouchers/used"),method:"GET",headers:o,transformRequest:transformRequestDefault},customerGetAddressList:{url:"".concat(T).concat(D,"/api/address-book/me"),method:"GET",headers:o,transformRequest:transformRequestDefault},customerCreateAddress:{url:"".concat(T).concat(D,"/api/address-book"),method:"POST",headers:o,transformRequest:transformRequestDefault},customerUpdateAddress:{url:"".concat(T).concat(D,"/api/address-book/:id"),method:"PATCH",headers:o,transformRequest:transformRequestDefault},customerDeleteAddress:{url:"".concat(T).concat(D,"/api/address-book/:id"),method:"DELETE",headers:o,transformRequest:transformRequestDefault}},{apiGateway:G}=a.environments,v={stockCheckStock:{url:"".concat(G).concat("pmc-ecm-product","/api/public/stock/check"),method:"POST",headers:o,transformRequest:transformRequestDefault}},{apiGateway:E}=a.environments,w={paymentMethodList:{url:"".concat(E).concat("pmc-ecm-payment","/api/payment-method/actives"),method:"GET",headers:o,transformRequest:transformRequestDefault}},{apiGateway:S}=a.environments,y={notificationRegisterDevice:{url:"".concat(S).concat("pmc-ecm-notification","/api/device/register"),method:"POST",responseType:"text",headers:o,transformRequest:transformRequestDefault},notificationGetList:{url:"".concat(S,"oms/api/customers/notifications"),method:"GET",headers:o,transformRequest:transformRequestDefault},notificationGetCount:{url:"".concat(S,"oms/api/customers/count_notification"),method:"GET",headers:o,transformRequest:transformRequestDefault},notificationReadNotification:{url:"".concat(S,"oms/api/customers/read_notifications"),method:"POST",headers:o,transformRequest:transformRequestDefault}},{apiGateway:b}=a.environments,{apiGateway:O}=a.environments,A="pmc-ecm-order",C={orderGetOrderList:{url:"".concat(O,"/pmc-ecm-order/api/order/me/index"),method:"GET",headers:{...o,"Cache-Control":"no-cache"},transformRequest:transformRequestDefault},orderGetOrderDetail:{url:"".concat(O).concat(A,"/api/order/me/with-code/:code"),method:"GET"},orderGetOrderSummary:{url:"".concat(O).concat(A,"/api/order/me/total"),method:"GET",headers:{...o,"Cache-Control":"no-cache"},transformRequest:transformRequestDefault},orderGetOrderMyTransactionByCode:{url:"".concat(O,"/pmc-ecm-order/api/order/me/transaction/with-code/:code"),method:"GET",headers:o,transformRequest:transformRequestDefault},orderGetCancelReason:{url:"".concat(O,"/pmc-oms-order-manage-api/api-auth/external/cancel_reasons"),method:"GET",headers:o,transformRequest:transformRequestDefault},orderCancel:{url:"".concat(O,"/pmc-oms-order-manage-api/api-auth/external/orders/:code/cancel_order"),method:"POST",headers:o,transformRequest:transformRequestDefault},orderGetRefundStatus:{url:"".concat(O,"/pmc-oms-order-manage-api/api-auth/external/orders/:code/refund"),method:"GET",headers:o,transformRequest:transformRequestDefault}},{apiGateway:P,pmcApiUploadUrl:L}=a.environments,U={prescriptionGetList:{url:"".concat(P,"/pmc-oms-order-manage-api/api/prescription"),method:"GET",headers:{...o},transformRequest:transformRequestDefault},prescriptionGetDetail:{url:"".concat(P,"/pmc-oms-order-manage-api/api/prescription/:code"),method:"GET",headers:{...o},transformRequest:transformRequestDefault},prescriptionDelete:{url:"".concat(P,"/pmc-oms-order-manage-api/api/prescription/:code"),method:"DELETE",headers:{...o},transformRequest:transformRequestDefault},prescriptionUploadImage:{url:"".concat(L,"images/upload/"),method:"POST",transformRequest:transformRequestBase,isAuth:!1},prescriptionCreate:{url:"".concat(P,"pmc-oms-order-manage-api/api/prescription"),method:"POST",headers:o,transformRequest:transformRequestDefault}},{apiGateway:_}=a.environments,I={promotionCoupon:{url:"".concat(_).concat("pmc-ecm-promotion","/api/coupon/available/me"),method:"GET",headers:o,transformRequest:transformRequestDefault}},{apiGateway:x}=a.environments,{apiGateway:F}=a.environments,{apiGateway:B}=a.environments,{apiGateway:N}=a.environments,j={landingPageStore:{url:"".concat(N).concat("pmc-ecm-landingpage","/api/landing-page-store"),method:"GET",headers:o,transformRequest:transformRequestDefault}},V={checkoutAddToCart:{url:"".concat(s,"api/checkout/line"),method:"POST",headers:o,transformRequest:transformRequestDefault},checkoutGetCartInfo:{url:"".concat(s,"/api/user/checkout"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonAppConfig:{url:"".concat(n,"app/api/config"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonMainData:{url:"".concat(n,"ecommerce/main"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonCategories:{url:"".concat(n,"pmc-ecm-product/api/public/category/tree"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGalleries:{url:"".concat(n,"api/v1/galleries"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonBanner:{url:"".concat(n,"webapp_config_service/v1/banners/active"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonMenu:{url:"".concat(n,"pmc-ecm-app-config/api/menu/with-group-code/:code"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonAppConfigWithVersion:{url:"".concat(n,"pmc-ecm-app-config/api/config/with-code/:version"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonPageContent:{url:"".concat(n,"api/v1/page"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGetProvinces:{url:"".concat(n,"provinces"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGetDistricts:{url:"".concat(n,"districts"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGetWards:{url:"".concat(n,"wards"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGetSeoProvinces:{url:"".concat(n,"api/v1/seo_provinces"),method:"GET",headers:o,transformRequest:transformRequestDefault},commonGetSeoDistricts:{url:"".concat(n,"api/v1/seo_districts"),method:"GET",headers:o,transformRequest:transformRequestDefault},...i,ratingGetAllReason:{url:"".concat(m,"pmc-ecm-review-api-golang/api/reason/all/:type"),method:"GET",headers:o,transformRequest:transformRequestDefault},ratingCreate:{url:"".concat(m,"pmc-ecm-review-api-golang/api/review/order"),method:"POST",headers:o,transformRequest:transformRequestDefault},ratingUpdate:{url:"".concat(m,"pmc-ecm-review-api-golang/api/review/order/default/:ratingId"),method:"PATCH",headers:o,transformRequest:transformRequestDefault},...f,blogGetCategories:{url:"".concat(h,"api/v1/posts/categories"),method:"GET",headers:o,transformRequest:transformRequestDefault},blogGetList:{url:"".concat(h,"api/v1/posts"),method:"GET",headers:o,transformRequest:transformRequestDefault},blogGetListByCategory:{url:"".concat(h,"api/v1/posts/filters"),method:"GET",headers:o,transformRequest:transformRequestDefault},blogGetDetail:{url:"".concat(h,"/api/v1/posts"),method:"GET",headers:o,transformRequest:transformRequestDefault},getListFilterBlog:{url:"".concat(h,"api/v1/posts/filters"),method:"GET",headers:o,transformRequest:transformRequestDefault},brandGetList:{url:"".concat(p,"pmc-ecm-product/api/public/brand"),method:"GET",headers:o,transformRequest:transformRequestDefault},brandGetDetailBySlug:{url:"".concat(p,"pmc-ecm-product/api/public/brand/with-slug/:slug"),method:"GET",headers:o,transformRequest:transformRequestDefault},...g,...k,...v,...w,...y,storeGetSeoStore:{url:"".concat(b,"/api/v1/seo_stores"),method:"GET",headers:o,transformRequest:transformRequestDefault},storeGetNearStore:{url:"".concat(b,"/oms/api/stores/find_nearby"),method:"GET",headers:o,transformRequest:transformRequestDefault},storeGetNearStoreCheckStock:{url:"".concat(b,"/api/open_stores_check_stock"),method:"GET",headers:o,transformRequest:transformRequestDefault},...C,googleGetGeoCode:{url:"https://maps.googleapis.com/maps/api/geocode/json",method:"GET",headers:{"Accept-Language":"vi"},transformRequest:transformRequestDefault,isAuth:!1},...I,...U,pageDetailData:{url:"".concat(x,"api/v1/page"),method:"GET",headers:o,transformRequest:transformRequestDefault},businessLicenseList:{url:"".concat(F,"ax/api/gpp"),method:"GET",headers:o,transformRequest:transformRequestDefault},catalogueActive:{url:"".concat(B,"api/catalogue/get-active"),method:"GET",headers:o,transformRequest:transformRequestDefault},catalogueLevel2:{url:"".concat(B,"api/banner/list-banner-url-level-2"),method:"GET",headers:o,transformRequest:transformRequestDefault},...j}},27978:function(e,t,r){"use strict";r.d(t,{environments:function(){return a}});let a={apiGateway:"https://api-gateway.pharmacity.vn/",googleClientID:"504223340381-vk8stijpd1lbugbak542gnoja0p1hms4.apps.googleusercontent.com",facebookAppID:"536289135327881",reCaptchaSiteKeyV3:"6LdEizcoAAAAAPWTlUW54_LyDx8wiQQEMtNd4IJ8",reCaptchaSiteKeyV2:"6LeVRu8oAAAAAORcjDuPu423EcNXEbnqmO1NVk90",revalidateTime:"0",googleMapApi:"AIzaSyA-3pTPVsa4Wr0XhsccIY48UbfIMpUkb7I",pmcApiUploadUrl:"https://pmc-upload-media.pharmacity.io/api/",appConfigVersion:"v1.0.2",pmcBookingCareUrl:"https://pmc.bookingcare.vn/?lk=1216&hide_nav=1&utm_source=pharmacity",pmcGenStoryBookingUrl:"https://genepharmacity.genestory.ai",pmcOpenAppUrl:"https://pharmacityvn.page.link/PharmacityApp",appMode:"production",publicSiteURL:"https://www.pharmacity.vn"}},3943:function(e,t,r){"use strict";r.d(t,{X:function(){return getObjectData},clearStorage:function(){return clearStorage},getStringData:function(){return getStringData},removeItem:function(){return removeItem},s:function(){return setObjectData},setStringData:function(){return setStringData}});let isLocalStorageAvailable=()=>{try{return window.localStorage}catch(e){return!1}},setObjectData=(e,t)=>{isLocalStorageAvailable()&&window.localStorage.setItem(e,JSON.stringify(t))},getObjectData=e=>{if(isLocalStorageAvailable())try{let t=window.localStorage.getItem(e)||"";return JSON.parse(t)}catch(e){}return{}},setStringData=(e,t)=>{isLocalStorageAvailable()&&window.localStorage.setItem(e,t)},getStringData=e=>isLocalStorageAvailable()&&window.localStorage.getItem(e)||"",removeItem=e=>{isLocalStorageAvailable()&&window.localStorage.removeItem(e)},clearStorage=()=>{isLocalStorageAvailable()&&window.localStorage.clear()}},88899:function(e,t,r){"use strict";r.d(t,{B$:function(){return u},J6:function(){return getTokenOld},LP:function(){return getToken},YV:function(){return getRefreshToken},Ze:function(){return setExpireFirebaseToken},cV:function(){return getExpireFirebaseToken},h6:function(){return setTokenToSession},im:function(){return getRefreshTokenOld},mB:function(){return storeToken},o4:function(){return setToken},qz:function(){return clearToken}});var a=r(3943),o=r(78987),s=r(64570);let{getStringData:n,setStringData:c,clearStorage:u,removeItem:i}=a,setTokenToSession=e=>{(0,s.setCookie)(o.u.userToken,e?"isLogged":"",{maxAge:Date.now()+31536e3})},getToken=()=>n(o.u.userToken),getRefreshToken=()=>n(o.u.userRefreshToken),getTokenOld=()=>n(o.u.userTokenOld),getRefreshTokenOld=()=>n(o.u.userRefreshTokenOld),setToken=e=>{c(o.u.userToken,e),setTokenToSession(e)},setRefreshToken=e=>c(o.u.userRefreshToken,e),setTokenOld=e=>c(o.u.userTokenOld,e),storeToken=(e,t,r)=>{setToken(e),setRefreshToken(t),setTokenOld(r)},clearToken=()=>{i(o.u.userToken),i(o.u.userRefreshToken),i(o.u.userTokenOld),i(o.u.userRefreshTokenOld),i(o.u.isTokenSentToServer),i(o.u.userExpireFirebaseToken),(0,s.deleteCookie)(o.u.userToken)},setExpireFirebaseToken=()=>{c(o.u.userExpireFirebaseToken,String(Date.now()+864e5))},getExpireFirebaseToken=()=>n(o.u.userExpireFirebaseToken)},78987:function(e,t,r){"use strict";r.d(t,{u:function(){return a}});let a={userToken:"pmc-user-token",userRefreshToken:"pmc-user-refresh-token",userTokenOld:"pmc-user-token-old",userRefreshTokenOld:"pmc-user-refresh-token-old",isTokenSentToServer:"pmc-is-token-send-to-server",userExpireFirebaseToken:"pmc-expire-firebase-token"}}}]);